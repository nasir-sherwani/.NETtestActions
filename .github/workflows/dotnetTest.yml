name: .NET Pipeline

env:
  Solution: testActions.sln                  # Replace with your solution name, i.e. MyWpfApp.sln.
  PACKAGE_PATH: 'published' 

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  Build:
    runs-on: windows-latest  
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload

    - name: Setup .NET Framework
      uses: microsoft/setup-msbuild@v1
      with:
        msbuild-version: '16.0'

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Restore NuGet packages
      run: nuget restore ${{ env.Solution }}

    - name: Build
      run: msbuild ${{ env.Solution }} /p:Configuration=Release

    - name: Publish to folder
      run: msbuild ${{ env.Solution }} /p:Configuration=Release /p:DeployOnBuild=true /t:WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=${{ env.PACKAGE_PATH }} /p:PackageAsSingleFile=false
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: MyArtifacts
        path: ${{ env.PACKAGE_PATH }}

  Release:
    permissions: write-all
    name: Release
    runs-on: windows-latest  
    needs: [Build]
    steps:
      - name: Create actions release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v0.1.3
          release_name: Release v0.1.3
          body: |
            This is the my first release!!
          draft: false
          prerelease: false
      - uses: actions/upload-artifact@v3
        with:
          name: MyArtifacts
          path: ${{ env.PACKAGE_PATH }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PACKAGE_PATH }}/my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    needs: [Build, Release]
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:javascript"
